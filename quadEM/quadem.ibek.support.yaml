# yaml-language-server: $schema=https://github.com/epics-containers/ibek/releases/download/3.0.1/ibek.support.schema.json

module: quadEM

entity_models:
  - name: TetrAMM
    description: |-
      TODO:ADD DESCRIPTION
    parameters:
      PORT:
        type: id
        description: |-
          Template argument

      P:
        type: str
        description: |-
          Base name of PV.

      R:
        type: str
        description: |-
          Second macro for name of PV.

      QSIZE:
        type: int
        description: |-
          ..
        default: 20

      RING_SIZE:
        type: int
        description: |-
          ..
        default: 10000

      IP:
        type: str
        description: |-
          IP address of the TetrAMM device

    pre_init:
      - value: |
          drvAsynIPPortConfigure({{PORT}}ip, {{IP}}, 100, 0, 0)
          asynOctetSetInputEos({{PORT}}ip, 0, "\r\n")
          asynOctetSetOutputEos({{PORT}}ip, 0, "\r")

          # drvTetrAMMConfigure(portName, IPportName, RingSize)
          drvTetrAMMConfigure("{{PORT}}", "{{PORT}}ip", {{RING_SIZE}})

    post_init:
      - value: |
          # Increase precision of sample time for TetrAMM
          dbpf("{{P}}{{R}}SampleTime_RBV.PREC", "5")

    databases:
      - file: $(QUADEM)/db/TetrAMM.template
        args:
          P:
          R:
          PORT:

    pvi:
      yaml_path: drvQuadEM.pvi.device.yaml
      pv_prefix: "{{ P }}"
      ui_macros:
        P:
        R:

  - name: Plugins
    description: |-
      Instantiates
        12 NDStats plugins for Current, Sum, Diff and Pos Channels
        12 NDTimeSeries plugins
        12 NDArray plugins
    parameters:
      NDARRAY_PORT:
        type: object
        description: |-
          Reference to the parent quadEM device

      PORTPREFIX:
        type: id
        description: |-
          The prefix for plugin asyn port names

      STAT_NCHAN:
        type: int
        description: |-
          Template argument

      STAT_XSIZE:
        type: int
        description: |-
          Template argument

      HIST_SIZE:
        type: int
        description: |-
          Template argument
        default: 256

      QUEUE:
        type: int
        description: |-
          length of NDArray queue
        default: 16

    shared:
      # repeated fields for NDStats and NDStdArrays sub_entities
      - &stats { type: ADCore.NDStats, P: "{{NDARRAY_PORT.P}}", NDARRAY_PORT: "{{NDARRAY_PORT.PORT}}", NCHANS: "{{STAT_NCHAN}}", XSIZE: "{{STAT_XSIZE}}", YSIZE: 0, HIST_SIZE: "{{HIST_SIZE}}", ENABLED: 1, QUEUE: "{{QUEUE}}" }
      - &arrays { type: ADCore.NDStdArrays, P: "{{NDARRAY_PORT.P}}", NDARRAY_PORT: "{{NDARRAY_PORT.PORT}}", ENABLED: 1, TYPE: Float64, FTVL: DOUBLE, NELEMENTS: "{{STAT_XSIZE}}", QUEUE: "{{QUEUE}}" }

    sub_entities:
      # NDStats for each channel
      - { <<: *stats, PORT: "{{PORTPREFIX}}.STATS.I1", R: ":Cur1:" }
      - { <<: *stats, PORT: "{{PORTPREFIX}}.STATS.I2", R: ":Cur2:" }
      - { <<: *stats, PORT: "{{PORTPREFIX}}.STATS.I3", R: ":Cur3:" }
      - { <<: *stats, PORT: "{{PORTPREFIX}}.STATS.I4", R: ":Cur4:" }
      - { <<: *stats, PORT: "{{PORTPREFIX}}.STATS.SumX", R: ":SumX:" }
      - { <<: *stats, PORT: "{{PORTPREFIX}}.STATS.SumY", R: ":SumY:" }
      - { <<: *stats, PORT: "{{PORTPREFIX}}.STATS.SumAll", R: ":SumAll:" }
      - { <<: *stats, PORT: "{{PORTPREFIX}}.STATS.DiffX", R: ":DiffX:" }
      - { <<: *stats, PORT: "{{PORTPREFIX}}.STATS.DiffY", R: ":DiffY:" }
      - { <<: *stats, PORT: "{{PORTPREFIX}}.STATS.PosX", R: ":PosX:" }
      - { <<: *stats, PORT: "{{PORTPREFIX}}.STATS.PosY", R: ":PosY:" }

      # NDStdArrays for each channel
      - { <<: *arrays, PORT: "{{PORTPREFIX}}.ARRAYS.I1", R: ":ARR1:" }
      - { <<: *arrays, PORT: "{{PORTPREFIX}}.ARRAYS.I2", R: ":ARR2:" }
      - { <<: *arrays, PORT: "{{PORTPREFIX}}.ARRAYS.I3", R: ":ARR3:" }
      - { <<: *arrays, PORT: "{{PORTPREFIX}}.ARRAYS.I4", R: ":ARR4:" }
      - { <<: *arrays, PORT: "{{PORTPREFIX}}.ARRAYS.SumX", R: ":ARRSumX:" }
      - { <<: *arrays, PORT: "{{PORTPREFIX}}.ARRAYS.SumY", R: ":ARRSumY:" }
      - { <<: *arrays, PORT: "{{PORTPREFIX}}.ARRAYS.SumAll", R: ":ARRSumAll:" }
      - { <<: *arrays, PORT: "{{PORTPREFIX}}.ARRAYS.DiffX", R: ":ARRDiffX:" }
      - { <<: *arrays, PORT: "{{PORTPREFIX}}.ARRAYS.DiffY", R: ":ARRDiffY:" }
      - { <<: *arrays, PORT: "{{PORTPREFIX}}.ARRAYS.PosX", R: ":ARRPosX:" }
      - { <<: *arrays, PORT: "{{PORTPREFIX}}.ARRAYS.PosY", R: ":ARRPosY:" }

  # TODO should this be moved up into ADCore?
  # TODO YES - plus ADCore.NDTimeSeries and ADCore.NDStats should use it.
  - name: _NDTimeSeriesN
    description: |-
      Instantiate a single NDTimeSeriesN database template
    parameters:
      NAME:
        type: id
        description: |-
          Name of the NDTimeSeriesN plugin
      P:
        type: str
        description: |-
          PV Prefix
      R:
        type: str
        description: |-
          PV Suffix
      PORT:
        type: str
        description: |-
          Asyn port name
      ADDR:
        type: int
        description: |-
          Asyn Address of the NDTimeSeriesN plugin
      TIMEOUT:
        type: int
        description: |-
          Timeout for the NDTimeSeriesN plugin
        default: 1
      NCHANS:
        type: int
        description: |-
          Number of channels in the NDTimeSeriesN plugin
        default: 2048

    databases:
      - file: $(ADCORE)/db/NDTimeSeriesN.template
        args: { NAME, P, R, PORT, ADDR, TIMEOUT, NCHANS }

  - name: quadEM_TimeSeries
    description: |-
      Create a time series and FFT for each channel using ADCore
    parameters:
      PORT:
        # not at id because it is the id of the subentity NDTimeSeries
        type: str
        description: |-
          Asyn port name
      NDARRAY_PORT:
        type: object
        description: |-
          The parent quadEM device to add TS records to
      NUM_TS:
        type: int
        description: |-
          Number of elements in time series
        default: 2048
      NUM_FREQ:
        type: int
        description: |-
          Number of elements in FFT
        default: 2048
      QUEUE:
        type: int
        description: |-
          Size of the queue
        default: 16
      ARCHIVE:
        type: bool
        description: |-
          Add template with archive tags for useful PVs
        default: true

    shared:
      - &channels ["Cur1", "Cur2", "Cur3", "Cur4", "SumX", "SumY", "SumAll", "DiffX", "DiffY", "PosX", "PosY"]

    sub_entities:
      - type: ADCore.NDTimeSeries
        PORT: "{{PORT}}"
        ADDR: 11
        NDARRAY_ADDR: 11
        NSIGNALS: 11
        NDARRAY_PORT: "{{NDARRAY_PORT.PORT}}"
        P: "{{NDARRAY_PORT.P}}"
        R: "{{NDARRAY_PORT.R}}TS:"
        NCHANS: "{{NUM_TS}}"
        QUEUE: "{{QUEUE}}"
        NAME: "{{PORT}}"

      # Time series for each channel
      - type: ibek.repeat
        variable: SERIES
        values: *channels
        entity:
          type: quadEM._NDTimeSeriesN
          NAME: "{{SERIES}}"
          P: "{{NDARRAY_PORT.P}}"
          R: "{{NDARRAY_PORT.R}}TS:{{SERIES}}"
          PORT: "{{PORT}}{{SERIES}}"
          ADDR: "{{SERIES_num}}"
          NCHANS: "{{NUM_TS}}"

      # FFT for each channel
      - type: ibek.repeat
        variable: SERIES
        values: *channels
        entity:
          type: ADCore.NDFFT
          NAME: "{{SERIES}}"
          PORT: "{{PORT}}.FFT{{SERIES_num}}"
          P: "{{NDARRAY_PORT.P}}"
          R: "{{NDARRAY_PORT.R}}FTT:{{SERIES}}:"
          NDARRAY_PORT: "{{PORT}}"
          NDARRAY_ADDR: "{{SERIES_num}}"
          NCHANS: "{{NUM_FREQ}}"
          QUEUE: "{{QUEUE}}"
          TIME_LINK: "{{NDARRAY_PORT.P}}{{NDARRAY_PORT.R}}TS:TSAveragingTime_RBV CP MS, ENABLED=1"

      # NDStats for FFT for each channel
      - type: ibek.repeat
        variable: SERIES
        values: *channels
        entity:
          type: ADCore.NDStats
          P: "{{NDARRAY_PORT.P}}"
          R: "{{NDARRAY_PORT.R}}FFT:{{SERIES}}:"
          PORT: "{{PORT}}.TS.FFT{{SERIES_num}}.stats"
          NDARRAY_PORT: "{{PORT}}.FFT{{SERIES_num}}"
          HIST_SIZE: 28
          XSIZE: 128
          YSIZE: 0
          QUEUE: 16
          MAX_BUFFERS: 50
