# yaml-language-server: $schema=https://github.com/epics-containers/ibek/releases/download/3.0.1/ibek.support.schema.json

module: pmac

entity_models:
  - name: pmacAsynIPPort
    description: |-
      This will create an AsynPort connecting to a PMAC or GeoBrick over IP
    parameters:
      name:
        type: id
        description: |-
          Port Name, normally something like BRICK1port

      IP:
        type: str
        description: |-
          IP address of the geobrick

      simulation:
        type: str
        description: |-
          IP port to connect to if in simulation mode
        default: ""

    pre_init:
      - value: |
          # Create IP Port (PortName, IPAddr)
          pmacAsynIPConfigure("{{name}}", "{{IP}}")

  - name: GeoBrick
    description: |-
      This will create an asyn motor port for a GeoBrick that we can attach
          motor records to using the model 3 driver
    parameters:
      pmacAsynPort:
        type: object
        description: |-
          pmacAsynIPPort/pmacVmeConfig to connect to

      P:
        type: str
        description: |-
          PV Prefix

      name:
        type: id
        description: |-
          Name to use for the asyn port

      IdlePoll:
        type: int
        description: |-
          Idle Poll Period in ms
        default: 500

      MovingPoll:
        type: int
        description: |-
          Moving Poll Period in ms
        default: 100

      NAXES:
        type: int
        description: |-
          Number of axes
        default: 8

      TIMEOUT:
        type: int
        description: |-
          Timeout for controller communication
        default: 4

      FEEDRATE:
        type: int
        description: |-
          feedrate below which we go into error
        default: 100

      CSG0:
        type: str
        description: |-
          Name for Coordinate System Group 0
        default: ""

      CSG1:
        type: str
        description: |-
          Name for Coordinate System Group 1
        default: ""

      CSG2:
        type: str
        description: |-
          Name for Coordinate System Group 2
        default: ""

      CSG3:
        type: str
        description: |-
          Name for Coordinate System Group 3
        default: ""

      CSG4:
        type: str
        description: |-
          Name for Coordinate System Group 4
        default: ""

      CSG5:
        type: str
        description: |-
          Name for Coordinate System Group 5
        default: ""

      CSG6:
        type: str
        description: |-
          Name for Coordinate System Group 6
        default: ""

      CSG7:
        type: str
        description: |-
          Name for Coordinate System Group 7
        default: ""

    pre_init:
      - value: |
          # Configure Model 3 Controller Driver (ControlerPort, LowLevelDriverPort, Address, Axes, MovingPoll, IdlePoll)
          pmacCreateController("{{name}}", "{{pmacAsynPort}}", 0, {{NAXES}}, {{MovingPoll}}, {{IdlePoll}})
          # Configure Model 3 Axes Driver (Controler Port, Axis Count)
          pmacCreateAxes("{{name}}", {{NAXES}})

    databases:
      - file: pmacStatus.template
        args:
          P:
          PORT: "{{name}}"

      - file: pmacController.template
        args:
          FEEDRATE:
          CSG7:
          CSG6:
          CSG5:
          CSG4:
          CSG3:
          CSG2:
          CSG1:
          CSG0:
          P:
          TIMEOUT:
          NAXES:
          PORT: "{{name}}"

    pvi:
      yaml_path: pmacController.pvi.device.yaml
      pv_prefix: "{{ P }}"
      ui_macros:
        P:
  - name: pmacAsynSSHPort
    description: |-
      This will create an AsynPort connecting to a PowerPMAC over SSH
    parameters:
      name:
        type: id
        description: |-
          Port Name, normally something like SSH_PORT

      IP:
        type: str
        description: |-
          IP address of the powerPMAC

      USERNAME:
        type: str
        description: |-
          Username for the SSH connection
        default: root

      PASSWORD:
        type: str
        description: |-
          Password for the SSH connection
        default: deltatau

      PRIORITY:
        type: int
        description: |-
          Priority of the port
        default: 0

      NOAUTOCONNECT:
        type: int
        description: |-
          Disable autoconnect if set to 1
        default: 0

      NOEOS:
        type: int
        description: |-
          No EOS used if set to 1
        default: 0

      simulation:
        type: str
        description: |-
          IP port to connect to if in simulation mode
        default: ""

    pre_init:
      - value: |
          # Create SSH Port (PortName, IPAddress, Username, Password, Priority, DisableAutoConnect, noProcessEos)
          drvAsynPowerPMACPortConfigure("{{name}}", "{{IP}}", "{{USERNAME}}", "{{PASSWORD}}", "{{PRIORITY}}", "{{NOAUTOCONNECT}}", "{{NOEOS}}")

  - name: PowerPMAC
    description: |-
      This will create an asyn motor port for a PowerPMAC that we can attach
          motor records to using the model 3 driver
    parameters:
      pmacAsynSSHPort:
        type: object
        description: |-
          pmacAsynSSHPort to connect to

      P:
        type: str
        description: |-
          PV Prefix

      name:
        type: id
        description: |-
          Name to use for the asyn port

      NAxes:
        type: int
        description: |-
          Number of axes
        default: 8

      IdlePoll:
        type: int
        description: |-
          Idle Poll Period in ms
        default: 1000

      MovingPoll:
        type: int
        description: |-
          Moving Poll Period in ms
        default: 100

      NAXES:
        type: int
        description: |-
          Number of axes
        default: 8

      TIMEOUT:
        type: int
        description: |-
          Timeout for controller communication
        default: 4

      FEEDRATE:
        type: int
        description: |-
          feedrate below which we go into error
        default: 100

      PMAC:
        type: str
        description: |-
          Pmac/Geobrick name
        default: ""

      AXIS:
        type: str
        description: |-
          Axis number
        default: ""

      PORT:
        type: str
        description: |-
          Asyn port
        default: "{{name}}"

      CSG0:
        type: str
        description: |-
          Name for Coordinate System Group 0
        default: ""

      CSG1:
        type: str
        description: |-
          Name for Coordinate System Group 1
        default: ""

      CSG2:
        type: str
        description: |-
          Name for Coordinate System Group 2
        default: ""

      CSG3:
        type: str
        description: |-
          Name for Coordinate System Group 3
        default: ""

      CSG4:
        type: str
        description: |-
          Name for Coordinate System Group 4
        default: ""

      CSG5:
        type: str
        description: |-
          Name for Coordinate System Group 5
        default: ""

      CSG6:
        type: str
        description: |-
          Name for Coordinate System Group 6
        default: ""

      CSG7:
        type: str
        description: |-
          Name for Coordinate System Group 7
        default: ""

    pre_init:
      - value: |
          # Configure Model 3 Controller Driver (ControlerPort, LowLevelDriverPort, Address, Axes, MovingPoll, IdlePoll)
          pmacCreateController("{{name}}", "{{pmacAsynSSHPort}}", 0, {{NAxes}}, {{MovingPoll}}, {{IdlePoll}})
          # Configure Model 3 Axes Driver (Controler Port, Axis Count)
          pmacCreateAxes("{{name}}", {{NAxes}})

    databases:
      - file: pmacStatusAxis.template
        args:
          AXIS:
          PORT:
          PMAC:

      - file: powerPmacStatus.template
        args:
          P:
          PORT:

      - file: pmacController.template
        args:
          FEEDRATE:
          CSG7:
          CSG6:
          CSG5:
          CSG4:
          CSG3:
          CSG2:
          CSG1:
          CSG0:
          P:
          TIMEOUT:
          NAXES:
          PORT:

  - name: CS
    description: |-
      Creates some PVs for global control of a Coordinate System,
          namely programmed move time and deferred move control
    parameters:
      name:
        type: id
        description: |-
          CS Name (for asyn port that motor records are connected to)

      PmacController:
        type: object
        description: |-
          Underlying PMAC or GeoBrick object

      CS:
        type: int
        description: |-
          Coordinate System Number for the cs controller

      # TODO: I can't see anywhere where this argument is used
      # - type: int
      #   name: PLCNum
      #   description: |-
      #     PLC Number, use CS + 15

      NAxes:
        type: int
        description: |-
          Number of axes
        default: 9

      Program:
        type: int
        description: |-
          Motion Program to run
        default: 10

      IdlePoll:
        type: int
        description: |-
          Idle Poll Period in ms
        default: 500

      MovingPoll:
        type: int
        description: |-
          Moving Poll Period in ms
        default: 100

      TIMEOUT:
        type: int
        description: |-
          Timeout for controller communication
        default: 4

    pre_init:
      - value: |
          # Create CS (CSPortName, ControllerPort, CSNumber, ProgramNumber)
          pmacCreateCS("{{name}}", "{{PmacController}}", {{CS}}, {{Program}})
          # Configure Model 3 CS Axes Driver (CSPortName, CSAxisCount)
          pmacCreateCSAxes("{{name}}", {{NAxes}})

    databases:
      - file: pmacCsController.template
        args:
          CS:
          PARENTPORT: "{{PmacController}}"
          PORT: "{{name}}"
          TIMEOUT:
          PMAC: "{{PmacController.P}}"

  - name: GeoBrickTrajectoryControl
    description: |-
      Creates some PVs for executing trajectory scans on the pmac controller by
             instantiating an instance of pmacTrajectoryAxis.template for each axis
    parameters:
      PmacController:
        type: object
        description: |-
          Delta tau motor controller

      NPOINTS:
        type: int
        description: |-
          Number of points that can be built at any time
        default: 10000

      MAXPOINTS:
        type: int
        description: |-
          Maximum number of points in a scan
        default: 4000000

      PREC:
        type: int
        description: |-
          precision of axis defnitions
        default: 3

    databases:
      - file: pmacControllerTrajectory.template
        args:
          NPOINTS:
          MAXPOINTS:
          PORT: "{{PmacController}}"
          PREC:
          PMAC: "{{PmacController.P}}"
          NAxes: "{{PmacController.NAXES}}"

    # pvi:
    #   yaml_path: pmacTrajectory.pvi.device.yaml
    #   pv_prefix: "{{ PmacController.P }}"
    #   ui_macros:
    #     PMAC:

  - name: dls_pmac_asyn_motor
    description: |-
      describe a single real axis on a pmac controller
    parameters:
      Controller:
        type: object
        description: |-
          Delta tau motor Controller object or Coordinate System Controller object

      is_cs:
        type: bool
        description: |-
          True if this is a coordinate system axis
        default: false

      P:
        type: str
        description: |-
          Device Prefix

      M:
        type: str
        description: |-
          Device Suffix

      ADDR:
        type: int
        description: |-
          Address on controller i.e. Axis number

      DESC:
        type: str
        description: |-
          Description, displayed on OPI screen

      MRES:
        type: float
        description: |-
          Motor Step Size (EGU)

      VELO:
        type: float
        description: |-
          Velocity (EGU/s)
        default: 1.0

      PREC:
        type: int
        description: |-
          Display Precision
        default: 5

      EGU:
        type: str
        description: |-
          Engineering Units

      TWV:
        type: float
        description: |-
          Tweak Step Size (EGU)
        default: 1.0

      DTYP:
        type: str
        description: |-
          DTYP of record
        default: asynMotor

      DIR:
        type: enum
        description: |-
          User Direction
        default: 0
        values:
          Pos: 0
          Neg: 1

      VBAS:
        type: float
        description: |-
          Base Velocity (EGU/s)
        default: 0.0

      VMAX:
        type: float
        description: |-
          Max Velocity (EGU/s), defaults to VELO
        default: "{{VELO | float}}"

      ACCL:
        type: float
        description: |-
          Seconds to Velocity
        default: 0.5

      BDST:
        type: float
        description: |-
          Backlash Distance (EGU)
        default: 0.0

      BVEL:
        type: float
        description: |-
          BACKLASH Velocity (EGU/s)
        default: 0.0

      BACC:
        type: float
        description: |-
          BACKLASH Seconds to Veloc.
        default: 0.0

      DHLM:
        type: float
        description: |-
          Dial High Limit

      DLLM:
        type: float
        description: |-
          Dial Low Limit

      HLM:
        type: str # float or blank
        description: |-
          User High Limit
        default: ""

      LLM:
        type: str # float or blank
        description: |-
          User Low Limit
        default: ""

      HLSV:
        type: str
        description: |-
          HW Lim. Violation Svr
        default: MAJOR

      INIT:
        type: str
        description: |-
          Startup commands
        default: ""

      SREV:
        type: int
        description: |-
          Steps per Revolution
        default: 1000

      RRES:
        type: float
        description: |-
          Readback Step Size (EGU)
        default: 0.0

      ERES:
        type: float
        description: |-
          Encoder Step Size (EGU)
        default: 0.0

      JAR:
        type: float
        description: |-
          Jog Acceleration (EGU/s^2)
        default: 0.0

      UEIP:
        type: enum
        description: |-
          Use Encoder If Present
        default: No
        values:
          Yes: 1
          No: 0

      URIP:
        type: enum
        description: |-
          Use RDBL If Present
        default: 0
        values:
          Yes: 0
          No: 1

      RDBL:
        type: str
        description: |-
          Readback Location, set URIP = 1 if you specify this
        default: ""

      RLNK:
        type: str
        description: |-
          Readback output link
        default: ""

      RTRY:
        type: int
        description: |-
          Max retry count
        default: 0

      DLY:
        type: int
        description: |-
          Readback settle time (s)
        default: 0

      OFF:
        type: float
        description: |-
          User Offset (EGU)
        default: 0.0

      RDBD:
        type: float
        description: |-
          Retry Deadband (EGU)
        default: 0.0

      FOFF:
        type: enum
        description: |-
          Freeze Offset, 0=variable, 1=frozen
        default: Variable
        values:
          Variable: 0
          Frozen: 1

      ADEL:
        type: float
        description: |-
          Alarm monitor deadband (EGU)
        default: 0

      NTM:
        type: enum
        description: |-
          New Target Monitor, only set to 0 for soft motors
        default: YES
        values:
          NO: 0
          YES: 1

      FEHIGH:
        type: float
        description: |-
          HIGH limit for following error
        default: 0.0

      FEHIHI:
        type: float
        description: |-
          HIHI limit for following error
        default: 0.0

      FEHHSV:
        type: str
        description: |-
          HIHI alarm severity for following error
        default: NO_ALARM

      FEHSV:
        type: str
        description: |-
          HIGH alarm severity for following error
        default: NO_ALARM

      SCALE:
        type: int
        description: |-
          Scale factor, if pmacSetAxisScale is used this should be set
        default: 1

      HOMEVIS:
        type: int
        description: |-
          If 1 then home is visible on the gui
        default: 1

      HOMEVISSTR:
        type: str
        description: |-
          If HOMEVIS=0, then display this text on the gui instead
        default: Use motor summary screen

      alh:
        type: str
        description: |-
          set to '#' to comment out alh lines
        default: None

      HOME:
        type: str
        description: |-
          the template contains enough records to keep the motor record happy
        default: "{{P}}"

      ALLOW_HOMED_SET:
        type: str
        description: |-
          status manually.  This is set to a comment character by default.
        default: "#"

    databases:
      - file: "{{ 'dls_pmac_cs_asyn_motor.template' if is_cs else 'dls_pmac_asyn_motor.template' }}"
        args:
          P:
          M:
          PORT: "{{ Controller }}"
          SPORT: "{{ '' if is_cs else Controller.pmacAsynPort }}"
          CS: "{{Controller.CS if is_cs else 0}}"
          PMAC: "{{ Controller.PmacController.P if is_cs else Controller.P }}"
          VELO:
          ACCL:
          SCALE:
          BACC:
          alh:
          DHLM:
          HOMEVIS:
          EGU:
          FEHSV:
          VBAS:
          VMAX:
          HOME:
          BDST:
          DIR:
          DTYP:
          FEHIGH:
          DLLM:
          INIT:
          ALLOW_HOMED_SET:
          RDBL:
          SREV:
          LLM:
          ADEL:
          RDBD:
          URIP:
          ADDR:
          RTRY:
          OFF:
          ERES:
          FEHIHI:
          FEHHSV:
          JAR:
          DESC:
          BVEL:
          MRES:
          DLY:
          HLSV:
          UEIP:
          RRES:
          PREC:
          RLNK:
          FOFF:
          HLM:
          NTM:
          TWV:
          HOMEVISSTR:

    pvi:
      yaml_path: pmacAxis.pvi.device.yaml
      pv_prefix: "{{ P }}{{ M }}"
      ui_macros:
        P:
        M:
  - name: autohome
    description: |-
      TODO:ADD DESCRIPTION
    parameters:
      P:
        type: str
        description: |-
          Pv Prefix

      PLC:
        type: int
        description: |-
          PLC number

      PmacController:
        type: object
        description: |-
          Delta tau motor controller port

      GRP1:
        type: str
        description: |-
          Optional.  Homing group 1 description.  Defaults to "All".
        default: All

      GRP2:
        type: str
        description: |-
          Optional.  Homing group 2 description.  Defaults to give empty description string.
        default: ""

      GRP3:
        type: str
        description: |-
          Optional.  Homing group 3 description.  Defaults to give empty description string.
        default: ""

      GRP4:
        type: str
        description: |-
          Optional.  Homing group 4 description.  Defaults to give empty description string.
        default: ""

      GRP5:
        type: str
        description: |-
          Optional.  Homing group 5 description.  Defaults to give empty description string.
        default: ""

      GRP6:
        type: str
        description: |-
          Optional.  Homing group 6 description.  Defaults to give empty description string.
        default: ""

      GRP7:
        type: str
        description: |-
          Optional.  Homing group 7 description.  Defaults to give empty description string.
        default: ""

      GRP8:
        type: str
        description: |-
          Optional.  Homing group 8 description.  Defaults to give empty description string.
        default: ""

      GRP9:
        type: str
        description: |-
          Optional.  Homing group 9 description.  Defaults to give empty description string.
        default: ""

      GRP10:
        type: str
        description: |-
          Optional.  Homing group 10 description.  Defaults to give empty description string.
        default: ""

      STATE11:
        type: str
        description: |-
          Optional.  Homing state 11 description.  Defaults to give empty description string.
        default: ""

      STATE12:
        type: str
        description: |-
          Optional.  Homing state 12 description.  Defaults to give empty description string.
        default: ""

      STATE13:
        type: str
        description: |-
          Optional.  Homing state 13 description.  Defaults to give empty description string.
        default: ""

      STATE14:
        type: str
        description: |-
          Optional.  Homing state 14 description.  Defaults to give empty description string.
        default: ""

      STATE15:
        type: str
        description: |-
          Optional.  Homing state 15 description.  Defaults to give empty description string.
        default: ""

      STATUS11:
        type: str
        description: |-
          Optional.  Homing status 11 description (e.g. for custom limit checks).  Defaults to give empty description string.
        default: ""

      STATUS12:
        type: str
        description: |-
          Optional.  Homing status 12 description (e.g. for custom limit checks).  Defaults to give empty description string.
        default: ""

      STATUS13:
        type: str
        description: |-
          Optional.  Homing status 13 description (e.g. for custom limit checks).  Defaults to give empty description string.
        default: ""

      STATUS14:
        type: str
        description: |-
          Optional.  Homing status 14 description (e.g. for custom limit checks).  Defaults to give empty description string.
        default: ""

      STATUS15:
        type: str
        description: |-
          Optional.  Homing status 15 description (e.g. for custom limit checks).  Defaults to give empty description string.
        default: ""

      STATUSSV11:
        type: str
        description: |-
          Optional.  Homing status 11 severity.  Defaults to NO_ALARM.
        default: NO_ALARM

      STATUSSV12:
        type: str
        description: |-
          Optional.  Homing status 12 severity.  Defaults to NO_ALARM.
        default: NO_ALARM

      STATUSSV13:
        type: str
        description: |-
          Optional.  Homing status 13 severity.  Defaults to NO_ALARM.
        default: NO_ALARM

      STATUSSV14:
        type: str
        description: |-
          Optional.  Homing status 14 severity.  Defaults to NO_ALARM.
        default: NO_ALARM

      STATUSSV15:
        type: str
        description: |-
          Optional.  Homing status 15 severity.  Defaults to NO_ALARM.
        default: NO_ALARM

      DESC:
        type: str
        description: |-
          Description
        default: ""

    databases:
      - file: autohome.template
        args:
          GRP10:
          CTRL: "{{PmacController.P}}"
          PORT: "{{PmacController}}"
          GRP9:
          GRP8:
          GRP3:
          GRP2:
          GRP1:
          GRP7:
          GRP6:
          GRP5:
          GRP4:
          STATUS11:
          STATUSSV11:
          STATUS13:
          STATUS12:
          STATUS15:
          STATUS14:
          DESC:
          P:
          STATE13:
          STATE12:
          STATE11:
          STATUSSV12:
          STATE15:
          STATE14:
          STATUSSV13:
          PLC:
          STATUSSV14:
          STATUSSV15:

  - name: pmacVariableWrite
    description: |-
      Simple template that reads and writes to a variable on a
      PMAC or geoBrick via dynamic parameters.
    parameters:
      P:
        type: str
        description: |-
          Pv Prefix

      Q:
        type: str
        description: |-
          Pv Suffix

      PORT:
        type: object
        description: |-
          Delta tau motor controller comms port

      VAR:
        type: str
        description: |-
          Variable on PMAC to write to, e.g. P700

      EGU:
        type: str
        description: |-
          Engineering units

      VARIABLE_PREC:
        type: int
        description: |-
          Variable Record precision
        default: 5

      DTYP:
        type: str
        description: |-
          asyn DTYP (e.g., asynFloat64, asynInt32)
        default: asynFloat64

      TYPE:
        type: str
        description: |-
          PMAC variable type (D=double, I=integer, H=hex, S=string)
        default: D

    databases:
      - file: pmacVariableWrite.template
        args:
          Q:
          DTYP:
          EGU:
          VARIABLE_PREC:
          P:
          VAR:
          TYPE:
          PORT:

  - name: pmacCreateCsGroup
    description: |-
      Create a group of axis mappings to coordinate systems. Instantating a GeoBrickGlobalControl
          will create a PV for switching between these groups
    parameters:
      Controller:
        type: object
        description: |-
          Underlying PMAC or GeoBrick object

      GroupNumber:
        type: int
        description: |-
          Unique Group number to describe this group

      GroupName:
        type: str
        description: |-
          Description of the group

      AxisCount:
        type: int
        description: |-
          Number of CS axes in this group

    pre_init:
      - value: |
          pmacCreateCsGroup("{{Controller}}", {{GroupNumber}}, "{{GroupName}}", {{AxisCount}})

  - name: pmacCsGroupAddAxis
    description: |-
      TODO:ADD DESCRIPTION
    parameters:
      Controller:
        type: object
        description: |-
          Underlying PMAC or GeoBrick object

      GroupNumber:
        type: int
        description: |-
          Unique Group number to describe this group

      AxisNumber:
        type: int
        description: |-
          Axis number of axis to add to the group

      AxisDef:
        type: str
        description: |-
          CS Axis definition for this axis i.e. one of I A B C U V W X Y Z (or may include linear equations)

      CoordSysNumber:
        type: int
        description: |-
          Axis number of axis to add to the group

    pre_init:
      - value: |
          pmacCsGroupAddAxis({{Controller}}, {{GroupNumber}}, {{AxisNumber}}, {{AxisDef}}, {{CoordSysNumber}})

  - name: pmacDisableLimitsCheck
    description: |-
      TODO:ADD DESCRIPTION
    parameters:
      Controller:
        type: object
        description: |-
          Underlying PMAC or GeoBrick object

      Axis:
        type: int
        description: |-
          Axis number to disable limit check, defaults to all

    pre_init:
      - value: |
          pmacDisableLimitsCheck("{{Controller}}", {{Axis}}, 0)

  - name: auto_translated_motor
    description: |-
      define a motor with forward and reverse relationship between user and
      motor positions
    parameters:
      P:
        type: str
        description: |-
          Device Prefix

      M:
        type: str
        description: |-
          Device Suffix

      DESC:
        type: str
        description: |-
          Description, displayed on OPI screen

      VELO:
        type: float
        description: |-
          Velocity (EGU/s)
        default: 1.0

      PREC:
        type: int
        description: |-
          Display Precision
        default: 5

      EGU:
        type: str
        description: |-
          Engineering Units

      TWV:
        type: float
        description: |-
          Tweak Step Size (EGU)
        default: 1.0

      VMAX:
        type: float
        description: |-
          Max Velocity (EGU/s), defaults to VELO
        default: "{{VELO | float}}"

      DHLM:
        type: float
        description: |-
          Dial High Limit

      DLLM:
        type: float
        description: |-
          Dial Low Limit

      FWD:
        type: str
        description: |-
          Forward relationship calc field

      BWD:
        type: str
        description: |-
          Backward relationship calc field

      SM:
        type: str
        description: |-
          PV suffix for the soft motor name

    databases:
      - file: translated_motor.template
        args: { P: null, SM: null, DESC: null, VELO: null, VMAX: null, PREC: null, EGU: null, DHLM: null, DLLM: null, M: null, TWV: null, FWD: null, BWD: null }

  - name: CS_accel_dcm
    description: |-
      Supporting template that allows setting of variables for an
      accel DCM CS
    parameters:
      PORT:
        type: object
        description: |-
          Delta tau motor controller comms port

      P:
        type: str
        description: |-
          Pv Prefix

      COORD:
        type: int
        description: |-
          Co-ordinate system number

      name:
        type: id
        description: |-
          This associates an edm screen with the template

    databases:
      - file: $(PMAC)/db/accel_dcm.template
        args:
          P:
          PORT:
          COORD:
          name:
