name: Check that ibek-support support modules will build in a container

on:
  push:
  pull_request:

jobs:
  # Removed because it won't use the ignore file and I want to not use verbose
  # prefixes on role variables
  #
  #
  # check-ansible-lint:
  #   name: Ansible Lint # Naming the build is important to use it as a status check
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Run ansible-lint
  #       uses: ansible/ansible-lint@main
  #       with:
  #         args: "--ignore-file .ansible-lint-ignore"
  #         setup_python: "true"
  #         working_directory: "_ansible"
  #         requirements_file: ""

  check-generate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      - name: Run schema/ioc instance generation tests
        run: |
          pip install -r requirements.txt
          bash tests/test_generate.sh

  check-docker-build:
    # pull requests are a duplicate of a branch push if within the same repo.
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.repository
    strategy:
      fail-fast: false
      max-parallel: 10
      matrix:
        repo: [ioc-adaravis, ioc-pmac, ioc-lakeshore340, ioc-tetramm, ioc-opcua, ioc-motorSim, ioc-adsimdetector]
        include:
          # rtems is cross compiled on ubuntu-latest
          # linux is natively compiled on ubuntu-latest and macos-latest

          # enable below for RTEMS
          # - architecture: rtems
          #   os: ubuntu-latest
          #   platform: linux/amd64

          - os: ubuntu-latest
            epics-target: linux-x86_64
            extension: ""
            platform: linux/amd64

          # enable below for MACOS native build on M1 macs
          # M1 Macs are coming!: https://github.com/github/roadmap/issues/528
          # - architecture: linux
          #   os: macos-latest-x1
          #   platform: linux/arm64

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup docker (missing on MacOS)
        if: runner.os == 'macos'
        uses: docker-practice/actions-setup-docker@fd7ecdac7caf8e2c541a48c9bcc280aae59a8461

      - name: Log in to GitHub Docker Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io/${{ github.repository_owner }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Setup
        # before building the container set up to use this version of ibek-support
        # and its associated version of ibek
        env:
          REPO: ${{ matrix.repo }}
        run: |
          if [[ ${{ matrix.repo }} == @(ioc-adsimdetector|ioc-tetramm|ioc-adaravis) ]]; then
            export BRANCH=pvxs;
          else
            export BRANCH=main;
          fi;
          git clone --branch ${BRANCH} https://github.com/epics-containers/${REPO} /tmp/generic_ioc
          cp -r . /tmp/generic_ioc/ibek-support
          cp ./requirements.txt /tmp/generic_ioc

      - name: Build image
        uses: docker/build-push-action@v5
        with:
          context: /tmp/generic_ioc
          platforms: ${{ matrix.platform }}
          target: runtime
          build-args: |
            IMAGE_EXT=${{ matrix.extension }}
          cache-from: type=gha,scope=${{ matrix.epics-target }}
          cache-to: type=gha,mode=max,scope=${{ matrix.epics-target }}
          tags: ci_test
          load: true

      - name: Test image
        # can't test non native without some hardware to run on
        if: ${{ matrix.epics-target == 'linux-x86_64' }}
        run: /tmp/generic_ioc/tests/run-tests.sh ci_test

  docker-build-all:
    # pull requests are a duplicate of a branch push if within the same repo.
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.repository
    runs-on: ubuntu-latest

    steps:
      - name: Setup docker (missing on MacOS)
        if: runner.os == 'macos'
        uses: docker-practice/actions-setup-docker@fd7ecdac7caf8e2c541a48c9bcc280aae59a8461

      - name: Log in to GitHub GHCR
        uses: docker/login-action@v1
        with:
          registry: ghcr.io/${{ github.repository_owner }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build image
        uses: docker/build-push-action@v5
        with:
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ci_test
          load: true
