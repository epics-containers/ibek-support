- name: Config block
  tags: [pre_build]
  block:
    - name: Remove files as required for {{ item }}
      ansible.builtin.file:
        state: absent
        path: "{{ local_path }}/{{ item }}"
      loop: "{{ remove_files_prebuild }}"

    - name: Comment out lines as required for {{ module }}
      ansible.builtin.replace:
        path: "{{ local_path }}/{{ item.path }}"
        regexp: "^(?!#)(.*({{ item.regexp }}).*$)"
        replace: "# \\1"
      loop: "{{ comment_out }}"
      when: item.when | default(true)

    - name: RTEMS settings for {{ module }}
      ansible.builtin.lineinfile:
        path: "{{ local_path }}/{{ config_linux_target }}"
        line: VALID_BUILDS=Host
        regexp: ".*VALID_BUILDS.*"
        create: true
        mode: "0644"
      when: is_rtems | bool

    # ad hoc patching of blocks of text
    - name: Patch blocks for {{ module }}
      ansible.builtin.blockinfile:
        path: "{{ local_path }}/{{ item.path }}"
        block: "{{ item.block }}"
        insertafter: "{{ item.insertafter | default('EOF') }}"
        marker: "{{ item.marker | default('# {mark} ANSIBLE MANAGED BLOCK') }}"
        create: true
        mode: "0644"
      loop: "{{ patch_blocks }}"
      when: item.when | default(true) and not (item.post_build | default(false) | bool)

    # ad hoc patching of individual lines
    - name: Patch lines for {{ module }}
      ansible.builtin.lineinfile:
        path: "{{ local_path }}/{{ item.path }}"
        line: "{{ item.line }}"
        regexp: "{{ item.regexp }}"
        create: true
        mode: "0644"
      loop: "{{ patch_lines }}"
      when: item.when | default(true) and not (item.post_build | default(false) | bool)

    - name: Call prebuild ad hoc scripts for {{ module }}
      ansible.builtin.command: "bash {{ ibek_support_folder }}/{{ item.path }}"
      args:
        chdir: "{{ local_path }}"
      loop: "{{ scripts }}"
      when: not (item.post_build | default(false)) | bool
      changed_when: true
