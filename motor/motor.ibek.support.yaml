# yaml-language-server: $schema=https://github.com/epics-containers/ibek/releases/download/3.0.1/ibek.support.schema.json

module: motor

entity_models:
  - name: motorUtil
    description: |-
      TODO:ADD DESCRIPTION
    parameters:
      P:
        type: str
        description: |-
          Device Prefix

    post_init:
      - value: |
          motorUtilInit("{{ P }}")

    databases:
      - file: $(MOTOR)/db/motorUtil.template
        args:
          P:

  - name: basic_asyn_motor
    description: |-
      Basic template, including motor record and associated tags
    parameters:
      P:
        type: str
        description: |-
          Device Prefix

      M:
        type: str
        description: |-
          Device Suffix

      PORT:
        type: object
        description: |-
          Asyn port for motor record

      ADDR:
        type: int
        description: |-
          Address on controller

      DESC:
        type: str
        description: |-
          Description, displayed on EDM screen

      MRES:
        type: float
        description: |-
          Motor Step Size (EGU)

      VELO:
        type: float
        description: |-
          Velocity (EGU/s)

      PREC:
        type: str
        description: |-
          Display Precision

      EGU:
        type: str
        description: |-
          Engineering Units

      TWV:
        type: str
        description: |-
          Tweak Step Size (EGU)

      DTYP:
        type: str
        description: |-
          DTYP of record
        default: asynMotor

      DIR:
        type: int
        description: |-
          User Direction
        default: 0

      VBAS:
        type: int
        description: |-
          Base Velocity (EGU/s)
        default: 0

      VMAX:
        type: str
        description: |-
          Max Velocity (EGU/s), defaults to VELO
        default: $(VELO)

      ACCL:
        type: float
        description: |-
          Seconds to Velocity
        default: 0.5

      BDST:
        type: int
        description: |-
          BL Distance (EGU)
        default: 0

      BVEL:
        type: int
        description: |-
          BL Velocity (EGU/s)
        default: 0

      BACC:
        type: str
        description: |-
          BL Seconds to Veloc.

      DHLM:
        type: str
        description: |-
          Dial High Limit

      DLLM:
        type: str
        description: |-
          Dial Low Limit

      HLM:
        type: str
        description: |-
          User High Limit

      LLM:
        type: str
        description: |-
          User Low Limit

      HLSV:
        type: str
        description: |-
          HW Lim. Violation Svr
        default: MAJOR

      INIT:
        type: str
        description: |-
          Startup commands

      SREV:
        type: int
        description: |-
          Steps per Revolution
        default: 1000

      RRES:
        type: str
        description: |-
          Readback Step Size (EGU)

      ERES:
        type: str
        description: |-
          Encoder Step Size (EGU)

      JAR:
        type: str
        description: |-
          Jog Acceleration (EGU/s^2)

      UEIP:
        type: int
        description: |-
          Use Encoder If Present
        default: 0

      URIP:
        type: int
        description: |-
          Use RDBL If Present
        default: 0

      RDBL:
        type: str
        description: |-
          Readback Location, set URIP = 1 if you specify this

      RLNK:
        type: str
        description: |-
          Readback output link

      RTRY:
        type: int
        description: |-
          Max retry count
        default: 0

      DLY:
        type: int
        description: |-
          Readback settle time (s)
        default: 0

      OFF:
        type: int
        description: |-
          User Offset (EGU)
        default: 0

      RDBD:
        type: str
        description: |-
          Retry Deadband (EGU)

      FOFF:
        type: int
        description: |-
          Freeze Offset, 0=variable, 1=frozen
        default: 0

      ADEL:
        type: int
        description: |-
          Alarm monitor deadband (EGU)
        default: 0

      NTM:
        type: int
        description: |-
          New Target Monitor, only set to 0 for soft motors
        default: 1

      FEHIGH:
        type: int
        description: |-
          HIGH limit for following error
        default: 0

      FEHIHI:
        type: int
        description: |-
          HIHI limit for following error
        default: 0

      FEHHSV:
        type: str
        description: |-
          HIHI alarm severity for following error
        default: NO_ALARM

      FEHSV:
        type: str
        description: |-
          HIGH alarm severity for following error
        default: NO_ALARM

      SCALE:
        type: int
        description: |-
          Scale factor, if pmacSetAxisScale is used this should be set
        default: 1

      HOMEVIS:
        type: int
        description: |-
          If 1 then home is visible on the gui
        default: 1

      HOMEVISSTR:
        type: str
        description: |-
          If HOMEVIS=0, then display this text on the gui instead
        default: Use motor summary screen

      name:
        type: id
        description: |-
          Object name and gui association name

      alh:
        type: str
        description: |-
          set to '#' to comment out alh lines TODO: REALLY???
        default: None

    databases:
      - file: $(MOTOR)/db/basic_asyn_motor.template
        args:
          VELO:
          ACCL:
          SCALE:
          BACC:
          alh:
          DHLM:
          HOMEVIS:
          M:
          EGU:
          FEHSV:
          VBAS:
          VMAX:
          BDST:
          PORT:
          SREV:
          DTYP:
          FEHIGH:
          DLLM:
          INIT:
          RDBL:
          DIR:
          LLM:
          ADEL:
          DESC:
          RDBD:
          URIP:
          ADDR:
          RTRY:
          OFF:
          ERES:
          FEHIHI:
          FEHHSV:
          JAR:
          P:
          BVEL:
          MRES:
          DLY:
          HLSV:
          UEIP:
          name:
          RRES:
          PREC:
          RLNK:
          FOFF:
          HLM:
          NTM:
          TWV:
          HOMEVISSTR:

    pvi:
      yaml_path: asynMotorAxis.pvi.device.yaml
      pv_prefix: "{{ P }}{{ M }}"
      ui_macros:
        P:
        M:

  - name: softMotorForPiezo
    description: |-
      TODO:ADD DESCRIPTION
    parameters:
      P:
        type: str
        description: |-
          Device Prefix

      Q:
        type: str
        description: |-
          Device Suffix

      DESC:
        type: str
        description: |-
          Description, displayed on EDM screen

      RDBL:
        type: str
        description: |-
          Readback link

      OUT:
        type: str
        description: |-
          Output link

      MOVEDLY:
        type: float
        description: |-
          Approximate move time (seconds)
        default: 0.1

      EGU:
        type: str
        description: |-
          Engineering Units

      DHLM:
        type: float
        description: |-
          Dial High Limit

      DLLM:
        type: float
        description: |-
          Dial Low Limit

      MRES:
        type: float
        description: |-
          Motor Step Size (EGU)
        default: 1

      RRES:
        type: float
        description: |-
          Readback Step Size (EGU)
        default: 1

      RDBD:
        type: float
        description: |-
          Retry deadband (EGU)
        default: 1

      name:
        type: id
        description: object name for references from motor positioner for example
        default: ""

    databases:
      - file: softMotorForPiezo.template
        args:
          DHLM:
          OUT:
          RRES:
          DLLM:
          EGU:
          Q:
          P:
          RDBL:
          MRES:
          MOVEDLY:
          RDBD:
          DESC:

  - name: MotorSim
    description: |-
      Simulated controller Device - instantiate one per controller '''
    parameters:
      name:
        type: id
        description: |-
          Asyn port for motor record

      AXES:
        type: int
        description: |-
          Number of Axes
        default: 8

      ACTIVEPOLL:
        type: int
        description: |-
          polling period when motors are moving
        default: 50

      IDLEPOLL:
        type: int
        description: |-
          polling period when all motors are idle
        default: 500

    pre_init:
      - when: first
        value: |
          # Create simulator: ( start card , start axis , hard low limit,
          motorSimCreate( 0, 1, -15000000, 15000000, 0, {{}}, 32 )
      # TODO - MISSING ARGS:
      - value: |
          drvAsynMotorConfigure("{{}}", "motorSim", {{}}, {{}})
  # TODO - MISSING ARGS:
